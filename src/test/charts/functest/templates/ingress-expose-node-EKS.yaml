{{- if and (eq "EKS" .Values.clusterType) .Values.backdoorServiceNames }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name | quote }}
  labels:
    "app.kubernetes.io/managed-by": "Helm"
    "meta.helm.sh/release-name": {{ .Release.Name | quote }}
    "meta.helm.sh/release-namespace": {{ .Release.Namespace | quote }}
  annotations:
    "kubernetes.io/ingress.class": nginx
    "nginx.ingress.kubernetes.io/affinity": cookie
    "nginx.ingress.kubernetes.io/affinity-mode": persistent
    "nginx.ingress.kubernetes.io/proxy-connect-timeout": "60"
    "nginx.ingress.kubernetes.io/proxy-read-timeout": "60"
    "nginx.ingress.kubernetes.io/proxy-send-timeout": "60"
spec:
  rules:
    {{- range $serviceName := .Values.backdoorServiceNames }}
    - host: {{ printf "%s.%s" $serviceName $.Values.ingressDomain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: 80
    {{ end }}
{{ end }}